$ cat /etc/apt/sources.list

$ man dpkg                 => ver manual do dpkg
$ dpkg --list              => ver todos os pacotes instalados
$ sudo dpkg -i nomedoarquivo.deb        => instala um pacote
$ sudo dpkg -r nomedoarquivo.deb        => remove o pacote
$ sudo dpkg -P ou --purge               => apaga o pacote e todos os arquivos relacionados
$ passwd => para alterar a senha do super usuário
$ sudo apt-get install nomedopacote
$ sudo apt-get -f install               => instala todas as dependências não resolvidas do nosso sources.list

-- terminal: (o app do terminal executa um console, que roda um programa chamado shell do interpretador bash)
-- command options arguments    ex: type -t ls

$ ls      => lista os arquivos da pasta atual
$ ls -l   =>  lista com detalhes
$ ls -a   => lista todos os arquivos inclusive os ocultos que iniciam com .
$ ls -la  => executa o all e o type (-a e -t) juntos
$ ls bemvindo*      => lista todos os arquivos com bemvindo - output: bemvindo.txt bemvindo2.txt
$ ls *.txt          => mostra todos os arquivos .txt
& zip bemvindo.zip *.txt => => zipa todos os arquivos .txt e guarda tudo na bemvindo.zip
$ type    => verificar o tipo de um comando ex: type ls / type echo
$ cd 'nome da pasta'    => entra na pasta/diretório
$ cd ..                 => para voltar uma pasta
$ mkdir   => para criar uma pasta
$ rm -rf 'nome da pasta'  => remover uma pasta
$ -a      => tudo (all)   ex: type -a ls
$ -t      => tipo (type)  ex: type -t ls    (output: builtin   --> significa que ls é um comando interno do bash e não um programa instalado)
windows + shift + pagedn ou pageup     => enviar um app para outra workspace
windows pagedn ou pageup     => ficar alternando
ctrl + alt + f1/f2/f3/f4/f5/f6 para abrir os 6 consoles possíveis, f7 para o console gráfico
ctrl + l  => limpa o console
ctrl + a  => vai para o inicio da frase
ctrl + e  => vai para o final da frase
ctrl + c  => encerrar a atividade
ctrl + d  => encerrar a atividade ex: python
ctrl + r  => abre uma busca, para que eu pesquise qual comando eu quero resgatar do meu histórico de comandos
$ apt-get  => instala os pacotes e todas as dependências 
$ dpkg    => instala um único pacote .deb que for informado  Ex: mysql5.6....deb
$ echo    =>  ex: echo Mateus, bom dia! -- devolve o que eu digitei (como se fosse um print)
$ pwd     => mostra o diretório atual
$ whoami  => mostra o seu User
$ zip     => compacta arquivos do meu diretório
$ unzip   => descompacta arquivos
$ unzip -l work.zip               => mostra todos os arquivos compactados na pasta work.zip
$ data    => data atual
$ help    => mostra informações de um comando ex: help type
$ env     => (environment) mostra todas as variáveis de ambiente criadas
$ df -h                             => lista os dispositivos montados (hds, ssds, etc)
$ chown   => significa change ownership, usada para mudar permissões
$ mv mensagem.txt bemvindo2.txt     => Move o mensagem.txt para bemvindo2.txt o "Renomeando-o"
$ cp arquivo.txt arquivo2.txt       => copia o arquivo.txt, cria o arquivo2.txt com as mesmas informações do primeiro
$ cp -r projetos-java/ projetos-c#/ =>Para copiar o diretório projetos-java para o diretório projetos-c#, passamos o -r como argumento para o cp, para que ele possa copiar os diretórios de maneira recursiva
$ history        => mostra o histórico de comandos executados no shell
$ which nome_do_programa          => mostra qual executável será executado - ex: wich zip - output: /user/bin/zip
$ which -a nome_do_programa       => mostra todos os caminhos que se relacionem com este
$ whereis zip                     => Ele nos mostra que o zip está em usr/bin/zip, e em /home/guilherme/zip e temos também um manual do zip, o /usr/share/man/man1/zip.1.gz

criei um arquivo de texto chamado mostra_idade em mateus@mateus-VitualBox == /home/mateus
digite os comandos abaixo para relembrar variáveis de ambiente e de shell
$ env FULL_NAME='Mateus V de Castro' AGE=19 OPERATIONAL_SYSTEM='Linux UBUNTU' bash mostra_idade
$ export NOME='Daniel'
$ echo $NOME
$ bash mostra_idade

rode os comandos abaixo (para ver var de ambiente e de shell):
====== var de shell/local
$ AMBIENTE=desenvolvimento           => criamos a var de shell (local) AMBiENTE com valor desenvolvimento
$ echo $AMBiENTE                     => mostra a var local chamada desenvolvimento
$ AMBIENTE=                          => zeramos/apagamos a variável
$ echo $AMBIENTE                     => verificando que zeramos msm
====== var de ambiente
$ export AMBIENTE=desenvolvimento    => criamos a var de ambiente AMBiENTE com valor desenvolvimento
$ echo $AMBiENTE                     => mostra a var de ambiente chamada desenvolvimento
$ AMBIENTE=                          => NÃO ZERAMOS a variável
$ echo $AMBiENTE
$ env                                => ela ainda está presente em env !!
$ export -n AMBIENTE                 => AGORA sim a variável foi apagada do env mas não do shell !!
$ unset AMBIENTE                     => para apagar tanto do shell quanto do env !!!
====== variáveis de ambiente do venv
$ echo $PS1                          => toda a formatação do meu prompt "mateus@mateus-VitualBox", pode ser alterada, ver "https://bashrcgenerator.com/"
$ echo $PS2                          => Caracter para quando tem uma quebra de linha com enter dentro de aspas "" ou ''
$ echo $UID                          => ID do meu usuário 
$ echo $HISTFILE                     => Local em que é armazenado o histórico de comandos dados no shell 
$ echo $PATH                         => Quando executamos um comando, o executável desse comando será procurado nos diretórios definidos no valor dessa variável. 

====== variável de ambiente EDITOR
==== Entrar no editor vim
$ EDITOR=/usr/bin/vi
$ /usr/bin/vi                        => para entrar no editor
$ :q                                 => para sair do editor
==== Entrar no editor Nano
$ EDITOR=/bin/nano
$ /bin/nano

====== Estender o volume da máquina virtual
ver : https://sourcedigit.com/16391-change-ownership-set-write-permission-on-ext4-partition-in-linux-ubuntu/
    : https://www.youtube.com/watch?v=cF4qIpOvkkA
    : https://www.youtube.com/watch?v=6wXZ38RfKxg


=> no Windows, no cmd, na pasta do Virtual Box

vboxmanage modifyhd "D:\UBUNTU\Ubuntu 20.04.vdi" --resize 51200  => modifica a maquina para 50GB -- 50*1024=51200

=> No linux particionar com o 'Gparter', montar a unidade em 'Discos' e depois:

$ sudo fdisk -l                     => ver o nome das partições
$ sudo blkid                        => mostra os UUID(s) das unidades
$ ll /media/                        => mostra as unidades montadas
$ sudo chown mateus:mateus /media/mateus/D   => conseguir permissão de leitura e gravação no disco D, já montado, do tipo ext4 que foi particionado no Gparter

 ======= instaláveis para tornar o Linux em um ambiente de desenvolvimento
$ sudo apt install build-essential default-jdk libssl-dev exuberant-ctags ncurses-term ack-grep silversearch-ag fontconfig imagemagick libmagickwand-dev software-properties-commom git vim-gtk3 curl perl -y




