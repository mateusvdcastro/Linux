$ ping       => Verifica a conectividade no nível de IP para outro computador TCP/IP enviando mensagens de solicitação de eco do Protocolo ICMP. O recebimento de mensagens de resposta de eco correspondentes é exibido, juntamente com os tempos de ida e volta. 
$ ipconfig   => Exibe todos os valores atuais de configuração de rede TCP/IP e atualiza as configurações de protocolo DHCP e DNS (sistema de nomes de domínio). Usado sem parâmetros, o ipconfig exibe endereços IPv4 (protocolo IP versão 4) e IPv6, máscara de sub-rede e gateway padrão para todos os adaptadores.
                TTL: O TTL seria uma informação dentro do pacote do IP que informa qual é a máxima quantidade de hops que minha informação pode passar antes de ser descartada. É a quantidade de máquinas que ela vai poder passar no caminho.
$ ipconfig /all => Exibe mais informações, inclusive o número de série da minha placa de Rede (MAC ou Endereço Físico) usado no protocolo ARP do aparelho Switch
$ tracert -d => O traceroute seria usado para verificar a rota que minha informação percorreu até chegar o destino. (traceroute -n no linux)
                Output: "*" Quando nós temos uma máquina que retornou (*) e passou a informação para uma próxima máquina, isso provavelmente indica que o administrador dessa máquina desabilitou a resposta ao nosso chamado. O que acontece seria que esse tipo de teste pode ser interpretado como uma tentativa de “scanear” possíveis portas abertas e vulnerabilidades que possam existir, caso seja usado por um usuário malicioso, pode ser usada como uma forma de reconhecimento da rede dessa possível vítima para que assim possa explorar possíveis falhas.
$ nslookup   => Exibe informações que você pode usar para diagnosticar a infraestrutura do DNS (Sistema de Nomes de Domínio). Antes de usar essa ferramenta, você deve estar familiarizado com o trabalho do DNS. A ferramenta de linha de comando nslookup estará disponível somente se você tiver instalado o protocolo TCP/IP.
$ ping 127.0.0.1 || ping localhost => É um endereço interno da placa de rede, usado para testar se os protocolos TCP/IP estão funcionando. Ele é conhecido como endereço de loopback, pois o sinal é enviado e recebido por ele mesmo.
$ 
$ 
$ 
$ 
$ 
$ 
$


!IP: O termo IP (Internet Protocol) é um número identificador dado ao seu computador, ou roteador, ao conectar-se à rede. É através desse número que seu computador pode enviar e receber dados na internet. O IP é definido pelo seu provedor de Internet. Ele pode ser estático (não mudar) ou dinâmico (mudando de tempos em tempos).
!Classes do IP: ver imagem. A IETF (Internet Engineering Task Force) determinou que existiriam ao todo 5 classes de endereços IP, indo de ordem alfabética da classe A até a classe E. Porém as duas últimas classes não são usadas para serem endereçadas as máquinas. A classe D seria usada para multicast (termo usado quando queremos nos comunicar com somente algumas máquinas de nossa rede) e a classe E seria uma classe experimental. Portanto as classes de IP que podem ser endereçadas para máquinas seriam a classe A, B e C.
!IP Privado: Os endereços internos privados não são roteados na Internet e nenhum tráfego pode ser enviado a eles da Internet, eles apenas deveriam funcionar dentro da rede local.Esses são endereços IP reservados. Esses endereços são destinados ao uso em redes locais fechadas e a alocação de tais endereços não é controlada globalmente por ninguém.O acesso direto à Internet usando um endereço IP privado não é possível. Nesse caso, a conexão com a Internet é via NAT (a tradução do endereço de rede substitui o endereço IP privado por um público). Os endereços IP privados na mesma rede local devem ser exclusivos e não podem ser repetidos.
       * Note que o IP da minha máquina é um IP Privado, estão, para acessarmos a internet a nossa provedora nos dá um ip público que pode ser visto no site: https://meuip.com.br/
!IP Público: São endereços públicos globais usados na Internet. Um endereço IP público é um endereço IP usado para acessar a Internet. Os endereços IP públicos (globais) são roteados na Internet, ao contrário dos endereços privados. A presença de um endereço IP público em seu roteador ou computador permitirá que você organize seu próprio servidor (VPN, FTP, WEB, etc.), acesso remoto ao seu computador, câmeras de vigilância de vídeo e acesse-os de qualquer lugar da rede global. Com um endereço IP público, você pode configurar qualquer servidor doméstico para publicá-lo na Internet: Web (HTTP), VPN (PPTP / IPSec / OpenVPN), mídia (áudio / vídeo), FTP, unidade de rede NAS, servidor de jogos, etc.
       * Pode ser visto em: https://meuip.com.br/
!Wireshark: https://www.wireshark.org/  - Wireshark is the world’s foremost and widely-used network protocol analyzer. It lets you see what’s happening on your network at a microscopic level and is the de facto (and often de jure) standard across many commercial and non-profit enterprises, government agencies, and educational institutions. Wireshark development thrives thanks to the volunteer contributions of networking experts around the globe and is the continuation of a project started by Gerald Combs in 1998.
       *ip.addr==algum_ip   => para filtrar no wireshark
!TCP: O protocolo TCP encontra-se acima da camada onde o IP está localizado e ele é responsável por realizar o transporte da minha informação. Além do protocolo TCP, essa camada possui também outro protocolo bastante conhecido, o UDP.
!ICMP: ICMP, sigla para o inglês Internet Control Message Protocol (em português, Protocolo de Mensagens de Controle da Internet), é um protocolo integrante do Protocolo IP, definido pelo RFC 792, é utilizado para comunicar informações da camada de rede, sendo o uso mais comum para fornecer relatórios de erros à fonte original. Qualquer computador que utilize IP precisa aceitar as mensagens ICMP e alterar o seu comportamento de acordo com o erro relatado. Os gateways devem estar programados para enviar mensagens ICMP quando receberem datagramas que provoquem algum erro.
!ARP: O ARP é o protocolo utilizado para fazer o mapeamento entre o endereço IP e o endereço MAC de um dispositivo. Isso é necessário porque o MAC encontra-se um nível abaixo do IP e eu preciso dele para poder transmitir as informações. Em redes de computadores, temos protocolos que possuem hierarquias diferentes. Para poder chegar até o IP que está na camada 3, eu preciso passar pelo MAC que está na camada 2, pense como se fosse escalar uma pirâmide, não dá pra chegar ao topo sem passar pelo meio dela!
!TLS: (Transport Layer Security) seria um protocolo de criptografia utilizado para segurança da informação (usado no HTTPS). Ele seria a evolução do protocolo SSL (Secure Sockets Layer).
!T568A: Padrão para o cabo de internet, desenvolvido pela associação internacional de Telecomunicações (Telecomunication industry association - TIA). Eles definiram o padrão de cores que deveria ser seguido. O T568B, utlizado na outra ponta do cabo, tem os cabos invertidos para fazer corretamente a passaem de entrada e saída de dados de uma máquina para outra, informaçoes estão na imagem salva nesta pasta
       T568A ordem: Branco e verde, verde, branco e laranja, azul, branco e azul, laranja, branco e marrom, marrom
	  T568B ordem: Branco e laranja, laranja, branco e verde, azul, branco e azul, verde, branco e marrom, marrom
       *As placas de rede dos computadores transmitem, por padrão, nas posições 1 e 2. As placas de rede dos computadores recebem por padrão nas posições 3 e 6. As placas de rede dos hubs transmitem por padrão nas posições 3 e 6. As placas de rede dos hubs recebem por padrão nas posições 1 e 2.
       *Se tentarmos fazer a conexão de dois computadores com cabo direto e conseguirmos pingar a máquina, provavelmente as placas de rede possuem um padrão auto-MDIX que é capaz de detectar que colocamos um cabo “errado”, mas consegue realizar a correção das polaridades via software 
!Hub: Aparelho que permite fazer a conexão de rede com várias máquinas https://www.google.com/search?q=ethernet+hub&sxsrf=APq-WBva_gdk-gLwFgRs6xiklwWP5SIz4A:1645466536375&source=lnms&tbm=isch&sa=X&ved=2ahUKEwj8p4_DsJH2AhWHEbkGHY5EBMUQ_AUoAnoECAEQBA&biw=1536&bih=764&dpr=1.25
       * Uma das limitações do hub: ele não consegue aprender aonde os computadores estão interconectados e sempre passará as informações para todos os dispositivos conectados com a porta, com exceção de quem enviou a requisição (exemplo quando uso o comando ping). O nome disso é Broadcast. Imagine um usuário fazendo o download de 500 mb e todos os dispositivos recebendo essa informação... Causa uma lentidão na rede. Em relação ao hub, precisamos falar também sobre a segurança da informação. A requisição que fizemos entre o segundo computador e o laptop, o hub desconhece aonde está conectado o laptop. Logo, ele enviará para todos os dispositivos que estiverem conectados. Se uma das máquinas tiver um usuário malicioso, ele pode fazer o que chamamos de análise de protocolo e decifrar o que está sendo enviado pelo segundo computador. O hub representa uma lentidão, além da vulnerabilidade da segurança.
!Roteador: A função do roteador é interconectar redes encaminhando seus pacotes de dados, os Switches e hubs são usados somente para conexão na minha rede local.
       * Para conectar um computador com um roteador, uso um cabo cruzado (CISCO CABO CONSOLE RJ45 PARA DB9), e usamos o app PUTTY para acessá-lo
       * cofigurando Roteador na aba cli:
         $ ?                        => mostra algumas informações
         $ wr                       => para salvar todas as configurações do roteador, ou seja, passar da memória volátil para a não volátil
         $ show running-config      => mostrando tudo oq está configurado
         $ show ip route            => ver a tabela com todas as rodas que o roteador possui
         $ ip route <ip> <ip_mask> <interface> => definir uma rota  ex: ip route 150.1.1.8 255.255.255.252 serial 0/1/0
         $ enable      => para subir em privilégio administrativo
         $ configure terminal => para entrar no modo de configuração do roteador
         $ interface fastEthernet 0/0 => para começar a configurar uma porta do roteador
         $ no shutdown                => agora a porta estará habilitada e acesa na cor verde
         $ exit                       => sair das configurações dessa porta
         $ interface fastEthernet 0/1 => para entrar nas configurações da outra porta
         $ no shutdown                => agora a porta estará habilitada e acesa em verde
         $ ip address 192.168.3.5 255.255.255.0 => como não temos um aparelho DHCP vamos dar um ip manualmente (192.168.3.5 = gateway) e informar a máscara de rede
         $ CTRL + Z                   => sair da configuração
         $ ping 192.168.3.2           => verificar se a conexão foi feita com sucesso com a máquina da porta 0/1
         $ configure terminal => para entrar no modo de configuração do roteador
         $ interface fastEthernet 0/0 => para começar a configurar uma porta do roteador
         $ ip address 191.168.3.7 255.255.255.0 => (191.168.3.7 = gateway) Lembrando que temos que configuras o roteador e o computador na mesma rede nessa porta, por isso obedecer a máscara de rede
         $ CTRL + Z                   => sair da configuração
         $ ping 191.168.3.1           => verificar se a conexão foi feita com sucesso com a máquina da porta 0/0, agora temos a conexão das duas portas feitas        
         $ show ip interface brief    => ver meus gateways configurados
         Ir em config do PC1 e colocar o seu gateway => 191.168.3.7
         Ir em config do PC2 e colocar o seu gateway => 192.168.3.5
         No PC1 $ ping 192.168.3.2    => Agora meu PC1 consegue se comunicar com o PC2 que está em uma rede diferente da dele
         No PC2 $ ping 191.168.3.1    => Agora meu PC2 consegue se comunicar com o PC1 que está em uma rede diferente da dele
!Switch: Veio como um substituto aos Hubs, por ser mais seguro (O Hub não consegue aprender onde um equipamento está localizado, o Switch sim). Quando um dispositivo quer se comunicar com outro, ele vai necessitar passar pelo Switch e ele informa dentro do pacote qual é seu endereço MAC e o Switch grava essa informação em sua memória, para que não tenha que "vazar" a informação para outros computadores que não seja o que enviou a informação e está esperando a resposta, uma vez que ele salvou o endereço dele e sabe para quem devolver. 
       * Uma das limitações do switch: Métodos usados por usuários maliciosos seria de inserir vários endereços MAC falsos para “lotar” a memória do Switch, uma vez que a memória esteja cheia, o Switch não vai conseguir definir quem está onde e ele passa a atuar como um Hub. Para contornar esse risco, podemos configurar a porta do Switch para aceitar um número máximo de endereços MAC, ao ultrapassar esse limite a porta é desligada e o ataque não teria sucesso.
       * O protocolo STP é utilizado pelos Switches como uma forma de prevenir que loops aconteçam em nossas redes.
       * O endereço FF-FF-FF-FF-FF-FF será interpretado como sendo um endereço broadcast e será passado para todas as portas do Switch com exceção da porta a qual enviou essa informação
       * No caso de todos os Switches estarem configurados com a prioridade padrão 32.768. Qual será o critério que o protocolo do STP irá adotar para eleger o Switch Root? Uma vez que as prioridades do Switch estiverem configuradas com o mesmo valor padrão, o Switch Root será o Switch que tiver o menor endereço MAC. A porta root seria a porta que os outros Switches definiram como sendo a melhor porta de acesso ao Switch Root. Os modos de operação das portas do Switch Root seriam no modo Designado.
       * A análise que o protocolo STP realiza para eleger o Switch Root seria através dos valores de prioridade e endereço MAC presentes dentro do protocolo BPDU. Esse conjunto de valores de prioridade e endereço MAC é conhecido como Bridge-ID. O primeiro critério que o STP irá analisar será o valor de prioridade, o Switch que apresentar menor prioridade será eleito como Root. Caso ocorra um empate entre as prioridades, o Switch irá analisar os endereços MAC e o que apresentar o menor endereço MAC é que será eleito como Root.
!VLAN no Switch:
       * Uma rede local virtual, normalmente denominada de VLAN, é uma rede logicamente independente. Várias VLANs podem coexistir em um mesmo comutador, de forma a dividir uma rede local em mais de uma rede, criando domínios de broadcast separados
       * As Vlans (Virtual Lans) são usadas para segmentação de redes e priorização de tráfego. Hoje em dia as redes corporativas trafegam diferentes tipos de dados em suas redes, como por exemplo, podemos ter tráfego de dados, vídeo e voz e acaba sendo necessário lidar com esses diferentes tipos de tráfego de uma maneira a priorizar um sobre o outro.
         $ ?                    => mostra algumas informações
         $ enable               => para subir em privilégio administrativo
         $ show vlan brief      => mostra todos os números de vlan sendo utilizadas 1-1005, usar apenas números livres
         $ configure terminal   => para entrar no modo de configuração do switch
         $ vlan 10              => colocamos o número da vlan que queremos configurar
         $ name VENDAS          => seguimentar as vlans por setor da empresa, por isso vamos nomeá-la
         $ exit                       => sair das configurações dessa vlan
         $ CTRL + Z                   => sair da configuração
         $ show vlan brief            => vemos que ela foi adicionada, mas ainda não tem interfaces
         $ configure terminal   => para entrar no modo de configuração do switch
         $ interface range fastEthernet 0/1 - 2 => com range podemos configurar mais de uma porta do switch de uma só vez
         $ switchport mode access     => O comando switchport mode access indicaria que essa porta está conectada a um dispositivo final
         $ switchport access vlan 10  => definir qual vlan essa porta está associada
         $ exit                       => sair das configurações dessa vlan
         $ CTRL + Z                   => sair da configuração
         $ show vlan brief            => agora vemos que a vlan de vendas está associada as portas 0/1 e 0/2
!Portas Trunk:
       * As portas trunk são portas configuradas para realizar o transporte de múltiplas Vlans entre Switches ou entre Switches e roteadores:
         $ enable               => para subir em privilégio administrativo
         $ show vlan brief      => mostra todos os números de vlan sendo utilizadas 1-1005, usar apenas números livres
         $ configure terminal   => para entrar no modo de configuração do switch
         $ interface range fastEthernet 0/3 => porta que iremos configurar em modo trunk
         $ switchport mode trunk            => definindo a porta em modo trunk
         $ CTRL + Z                         => sair da configuração
         $ show interfaces trunk            => mostra as portas que estão trabalhando em modo trunk e quais números de vlan elas passam
!Comunicação entre duas vlans atraves do roteador e configurando o DHCP:
       * no switch
         $ enable  
         $ configure terminal                   
         $ interface fastEthernet 0/5           
         $ switchport mode trunk                
         $ show interfaces trunk
       * no roteador
         $ enable                     => para subir em privilégio administrativo
         $ configure terminal         => para entrar no modo de configuração do roteador
         $ interface fastEthernet 0/1 => para começar a configurar uma porta do roteador
         $ no shutdown                => agora a porta estará habilitada e acesa em verde
         $ CTRL + Z                   => sair da configuração
         $ ip dhcp pool VLAN10          => O conjunto de endereços IP disponíveis, já descontados os endereços das faixas de exelusão, é conhecido como Pool de endereços.
         $ network 192.168.10.0 255.255.255.0  => definir o endereço de rede e máscara de rede
         $ exit          
         $ ip dhcp pool VLAN20                 => O conjunto de endereços IP disponíveis, já descontados os endereços das faixas de exelusão, é conhecido como Pool de endereços.
         $ network 192.168.20.0 255.255.255.0  => definir o endereço de rede e máscara de rede
         $ exit
         $ interface fastEthernet 0/1.1        => vamos dividir a fasEthernet em duas sub interfaces, uma para a Vlan10 e outra para a 20 
         $ encapsulation dot1Q 10              =>
         $ ip address 192.168.10.1 255.255.255.0  => definindo um ip para essa sub rede
         $ exit 
         $ interface fastEthernet 0/1.2        => vamos dividir a fasEthernet em duas sub interfaces, uma para a Vlan10 e outra para a 20
         $ encapsulation dot1Q 20
         $ ip address 192.168.20.1 255.255.255.0  =>  definindo um ip para essa sub rede
         $ exit 
         $ ip dhcp pool VLAN10
         $ default-router 192.168.10.1         => DHCP gateway
         $ exit 
         $ ip dhcp pool VLAN20
         $ default-router 192.168.20.1         => DHCP gateway               
         $ exit                        
!DHCP: O protocolo DHCP é um protocolo de cliente/servidor que fornece automaticamente um host ip (protocolo IP) com seu endereço IP e outras informações de configuração relacionadas, como a máscara de sub-rede e o gateway padrão.
       * cofigurando Roteador na aba cli:
         $ enable                      => para subir em privilégio administrativo
         $ configure terminal          => para entrar no modo de configuração do roteador
         $ interface fastEthernet 0/0  => para começar a configurar uma porta do roteador
         $ no shutdown                 => agora a porta estará habilitada e acesa em verde
         $ exit                        => sair das configurações dessa porta
         $ ip dhcp pool ALURA          => O conjunto de endereços IP disponíveis, já descontados os endereços das faixas de exelusão, é conhecido como Pool de endereços.
         $ network 192.168.0.0 255.255.255.0  => definir o endereço de rede e máscara de rede
         $ default-router 192.168.0.1  => definir um gateway padrão para todas as máquinas conectadas a essa rede
         $ exit
         $ interface fastEthernet 0/0  => Para configurarmos a porta 0/0 do roteador
         $ ip address 192.168.0.1 255.255.255.0     => Definir o IP dessa porta 0/0 que como já informamos antes servirá como gateway
	    Ir na aba Descktop de cada computador e mudar de Static para DHCP
       * Quando um cliente não possui endereço IP ele não sabe a quem perguntar, então ele precisa sair perguntando para todo mundo que está na mesma rede quem poderá fornecer um endereço IP. Quando essa comunicação é feita para todos os dispositivos, chamamos isso de Broadcast.
!Servidor web: Referente ao hardware, um servidor web é um computador que armazena arquivos que compõem os sites (por exemplo, documentos HTML, imagens, folhas de estilo, e arquivos JavaScript) e os entrega para o dispositivo do usuário final. Está conectado a Internet e pode ser acessado através do seu nome de domínio (DNS), como por exemplo mozilla.org. Referente ao software, um servidor web inclui diversos componentes que controlam como os usuários acessam os arquivos hospedados (armazenados para disponibilização), no mínimo um servidor HTTP. Um servidor HTTP é um software que compreende URLs (endereços web) e HTTP (o protocolo que seu navegador utiliza para visualizar páginas web.
       * cofigurando Roteador na aba cli:
         $ enable                      => para subir em privilégio administrativo
         $ configure terminal          => para entrar no modo de configuração do roteador
         $ interface fastEthernet 0/1  => configurar a porta 0/1
         $ no shutdown                 => agora a porta estará habilitada e acesa em verde
         $ ip address 8.8.8.1 255.0.0.0
       * Agora ir no servidor:
         Em ip configuration > interface > static > ipv4 = 8.0.255.255 > Subnet mask = 255.0.0.0 > gateway > 8.8.8.1 
	 * Colocar um html para o projeto do google:
         Ir em Services > Http > indice 5 > edit > apagar tudo > 
										<html>
										<h1>GOOGLE</h1>
										<input type="search">
										<input type="button" value="Buscar">
										</html>
       * Agora ir em um dos PCs e em web digitar o ip do servidor: 8.0.255.255
!DNS: O sistema DNS da internet funciona praticamente como uma agenda de telefone ao gerenciar o mapeamento entre nomes e números. Os servidores DNS convertem solicitações de nomes em endereços IP, controlando qual servidor um usuário final alcançará quando digitar um nome de domínio no navegador da web.
       * No servidor DNS:
         Em ip configuration > interface > static > ipv4 = 8.1.0.0 > Subnet mask = 255.0.0.0 > gateway > 8.8.8.1
       * Fazer o DNS do ip do google:
         Ir em Services > DNS > dns service = on >  name = www.google.com > address = 8.0.255.255 > add
       * Ir no roteador DHCP para informarmos quem será o DNS (note que em ip configuration de cada máquina não tem um dns setado, o DHCP irá informar):
         $ enable                      => para subir em privilégio administrativo
         $ configure terminal          => para entrar no modo de configuração do roteador
         $ ip dhcp pool ALURA          => acessar o poll que criamos antes
         $ dns-server 8.1.0.0          => agora o DHCP sabe qual IP de DNS ele deve passar aos computadores
         Ir nos computadores e dar refresh mudando de Static para DHCP
       * O serviço web utiliza a porta de comunicação 80 para o protocolo HTTP e 443 para a versão segura do protocolo HTTP (HTTPS), enquanto que o protocolo DNS utiliza a porta de comunicação 53
!STP (Spanning tree protocol):
       * Spanning Tree Protocol (referido com o acrónimo STP) é um protocolo para equipamentos de rede que permite resolver problemas de loop em redes comutadas cuja topologia introduza anéis nas ligações, auxiliando na melhor performance da rede. O protocolo STP possibilita a inclusão de ligações redundantes entre os computadores, provendo caminhos alternativos no caso de falha de uma dessas ligações. Nesse contexto, ele serve para evitar a formação de loops entre os comutadores e permitir a ativação e desativação automática dos caminhos alternativos. Para isso, o algoritmo de Spanning Tree determina qual é o caminho mais eficiente (de menor custo) entre cada segmento separado por bridges ou switches. Caso ocorra um problema nesse caminho, o algoritmo irá recalcular, entre os existentes, o novo caminho mais eficiente, habilitando-o automaticamente.
         $ enable                      => para subir em privilégio administrativo
         $ show spanning-tree vlan 10  => mostra informações do switch root e do atual (bridge ID) 
         $ show spanning-tree vlan 20
         $ enable
         $ configure terminal
         $ spanning-tree vlan 10 priority 0 => para definir um switch como root da vlan 10 manualmente
         $ spanning-tree vlan 20 priority 0 => para definir um switch como root da vlan 20 manualmente
!Máscara de Rede: A máscara de rede é usada como forma de comparação para determinar se dois equipamentos estão na mesma rede. Para isso ela vai dividir o endereço IP em dois grupos, de rede e hosts (máquinas).
!Defaut gateway: O default gateway é o endereço IP o qual será responsável por encaminhar pacotes para redes externas, é o IP do meu roteador.
!Broadcast: Broadcast seria um termo usado quando a comunicação é feita para todos os dispositivos que estão na mesma rede.
!Vamos fazer agora a tradução do endereço IP de loopback para a url www.cursoderedesdaalura.com: Caso seja Windows: Abrir bloco de notas como administrador e abrir o arquivo hosts localizado em C:\Windows\System32\drivers\etc e insira na última linha o mapeamento 127.0.0.1 www.cursoderedesdaalura.com e teste o ping para essa url
!Para modificar o IP da minha máquina manualmente:  Vamos até no ícone de conectividade, depois em "configurações de rede", "Ethernet". Em seguida, clicaremos em "Ethernet", ao ser aberta uma nova janela, selecionaremos "Propriedades". Será aberta uma nova janela, buscaremos pela opção "Protocolo IP Versão 4(TCP/IPv4)", depois em "Propriedades". Na nova janela, selecionaremos "Usar o seguinte endereço IP" e escreveremos o IP que ele deverá usar para fazer o teste.
!Classful e Classless: Nas redes Classful utilizamos as máscaras de rede respectivas a sua classe de endereços IP. Já nas redes Classless não teríamos esse vínculo entre endereços IP e máscaras de redes, somos livres para ajustar a máscara de rede para nossa necessidade independente de qual classe estarmos usando.  (classful ex: 255.255.255.0 , classless ex: 255.255.254.0)
           * Devemos desenvolver um projeto e o arquiteto de redes do projeto que estamos desenvolvendo disse que todos os endereços IP devem possuir máscara de rede /19. Que máscara de rede seria essa? A anotação CIDR seria a referência de quantos bits 1 nós temos em nossa máscara de rede. A máscara de rede possui ao todo 32 bits sendo separados em quatro intervalos com 8 bits por intervalos. Teremos então: 11111111.11111111.11100000.00000000 Se nós transformarmos esse valor em decimal, teremos: 255.255.224.0 Embora a forma oficial de representação e configuração da máscara de rede para endereços IPv4 seja por essa forma decimal (255.255.224.0) é comum no dia-a-dia utilizar essa anotação CIDR (/19).
!ACL: Listas de acesso ou do inglês (ACL) são listas as quais contém políticas de permissão ou negação de acesso por parte de clientes. Dessa forma, conseguimos criar políticas por usuário de quais protocolos e serviços que podem ser utilizados
       * Uma vez que a lista de acesso não possui nenhuma configuração para tratamento de um pacote de informação, a lista irá descartar esse pacote. 
       * No roteador:
         $ enable                                     
         $ configure terminal                          
         $ ip access-list extended SERVIDOR-GERENTES  => Criando uma lista de acesso
         $ no ip access-list extended SERVIDOR-GERENTES  => Para excluir uma lista de acesso
         Retirar os ips de dinâmico para estático para não inutilizar a lista
         $ permit tcp 172.16.2.131 0.0.0.0 172.16.3.2 0.0.0.0 => informando o ip do computador que desejamos permiter acesso e o "Source wildcard bits" que seria para indicar para a lista de acesso qual parte do ip deve igual e qual a parte pode ser diferente, quando temos mais de um computador querendo se comunicar. Depois devemos colocar o ip de destino que no caso seria o servidor e também informar o "Source wildcard bits"
         $ permit tcp 172.16.0.2 0.0.0.0 172.16.3.2 0.0.0.0   => outro computador com permissão a este servidor
         $ deny tcp 172.16.2.128 0.0.0.255 172.16.3.2 0.0.0.0 => Isto quer dizer que se não for nenhum desses endereços (172.16.2.131 e 172.16.0.2), o pacotinho será negado! Feito isso, vamos permitir que os outros protocolos de comunicação trabalhem normalmente, sem que o ACL exclua o pacote e derrube a comunicação dos demais computadores
         $ deny tcp 172.16.0.0 0.0.0.255 172.16.3.2 0.0.0.0
         $ permit ip any any                                  => Com o #permit ip any any, estamos permitindo qualquer tráfego que não seja destinado ao servidor. Uma vez que estamos colocando any, isso indica que qualquer endereço IP de origem assim como qualquer endereço IP de destino será aceito. Essa configuração é comumente utilizada nas listas de acesso para permitir que todo tráfego que esteja fora do nosso foco da lista de acesso continue funcionando normalmente.
         $ exit
         $ ip dhcp excluded-address 172.16.2.131  => como estou usando estaticamente esses indereços ips eu preciso que o dhcp os exclua para que ele não acabe os entregando para outros computadores e cause conflito na rede
         $ ip dhcp excluded-address 172.16.0.2
         $ interface fastEthernet 0/1.1 
         $ ip access-group SERVIDOR-GERENTES in  
         $ exit  
         $ interface fastEthernet 0/1.2 
         $ ip access-group SERVIDOR-GERENTES in 
!WAN: Wide Area Network  => As redes LAN são redes geograficamente pequenas, que geralmente estão concentradas em apenas um local, tais redes são de responsabilidade do cliente final. As redes WAN são redes de longa extensão geográfica, redes de provedores de serviços costumam possuir suas redes em diferentes cidades e estados acomodando diversos clientes.
!LAN: Local Area Network
!NAT: Isso acontece porque nosso roteador possui a configuração chamada NAT, essa configuração vai converter o endereço IP privado que temos em nossas máquinas para IP públicos que nosso provedor de serviços nos fornece.
       * configurando NAT 
        ! Fazer nos dois roteadores, o seu e no do provedor
        $ enable    
        $ configure terminal   
        $ interface serial 0/1/0   
        $ no shutdown  
        $ ip address 150.1.1.1 255.255.255.252  => Roteador 1, este é o ip público
        $ ip address 150.1.1.2 255.255.255.252  => Roteador 0
        !
        !Faremos então a tradução dos IPs públicos para os privados
        No roteador do cliente roteador 0:
        $ enable    
        $ configure terminal  
        $ ip access-list standard NAT     => O tipo standard analisa a origem dos endereços e nesse caso estamos só preocupados com a origem e não com o possível destino que esses endereços planejam acessar
        $ permit 172.16.0.0 0.0.255.255   => Tanto o setor de vendas quanto o de finanças começam com 172.16 por isso já estamos permitindo todos os computadores da rede com 0.0.255.255 de poderem ser traduzidas para um ip público
        $ exit
        $ interface fastEthernet 0/1.1    
        $ ip nat inside   
        $ exit   
        $ interface fastEthernet 0/1.2    
        $ ip nat inside   
        $ exit   
        $ interface serial 0/1/0    
        $ ip nat outside   
        $ exit   
        $ ip nat inside source list NAT interface serial 0/1/0 overload   => Com esse comando, diremos que será traduzido os endereços IPs que estão na rede (inside), e especificamos quais são esses endereços IPs que estão na lista NAT para a interface serial 0/1/0. Entretanto, seremos um pouco cuidadoso, porque só temos um endereço IP público, mas temos vários usuários na rede que podem estar acessando a internet ou qualquer outro recurso externo simultaneamente. Para especificar que a configuração da tradução tem que englobar todos esses endereços IPs internos de forma simultânea, colocaremos o overload. Com o overload, é dito que todos os usuários podem estar usando simultaneamente o endereço IP público 150.1.1.2. Depois disso, usamos a tecla "Enter" e teoricamente já criamos a lista de acessos com os endereços IPs que devem ser traduzidos. Nós especificamos as interfaces internas e externas, e associamos a nossa lista com esses IPs privados, para ela ser traduzida para a interface                                                                              serial 0/1/0, que irá conter o endereço público, e também especificamos a forma de tradução overload, dizendo que pode ocorrer mais de um usuário estar usando um recurso da internet ao mesmo tempo. 
        $ show ip nat translations   => Para vermos todas as traduções feitas
!RIP:
      * O protocolo de roteamento RIP é um dos mais antigos protocolos de roteamento e tem como métrica a quantidade de saltos (hops) para definir a melhor rota. O protocolo RIP vai definir como a melhor rota aquela onde apresentar a menor quantidade de saltos (hops) para chegar até o destino. Dessa forma, parâmetros como velocidade do link não é analisada por esse protocolo e com isso podemos ter a escolha de uma rota menos eficiente.
        No roteador (router 1)
        $ enable
        $ configure terminal
        $ router rip    => habilita o protocolo
        $ version 2
        $ no auto summary
        $ network 150.1.1.0
        $ network 150.1.1.4   
        No roteador (router 2)
        $ enable
        $ configure terminal
        $ router rip
        $ version 2
        $ no auto summary
        $ network 150.1.1.4
        $ network 150.1.1.8
        $ show ip route 
        $    =>
        $    =>
        $    =>
        $    =>
        $    =>





